# Source: rabbitmq-operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq-operator
  labels:
    app.kubernetes.io/name: rabbitmq-operator
    helm.sh/chart: rabbitmq-operator-0.1.0
    app.kubernetes.io/instance: rabbitmq-operator
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Tiller
---
# Source: rabbitmq-operator/templates/rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rabbitmq-operator-clusterrole
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list"]
---
# Source: rabbitmq-operator/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rabbitmq-operator-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: rabbitmq-operator
    namespace: default
roleRef:
  kind: ClusterRole
  name: rabbitmq-operator-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: rabbitmq-operator/templates/rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rabbitmq-operator-role
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "configmaps", "secrets", "pods"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["senacor.com"]
    resources: ["rabbitmqusers"]
    verbs: ["get", "watch", "list"]
---
# Source: rabbitmq-operator/templates/rbac.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rabbitmq-operator-rolebinding
  namespace: default
subjects:
  - kind: ServiceAccount
    name: rabbitmq-operator
    namespace: default
roleRef:
  kind: Role
  name: rabbitmq-operator-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: rabbitmq-operator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-operator
  labels:
    app.kubernetes.io/name: rabbitmq-operator
    helm.sh/chart: rabbitmq-operator-0.1.0
    app.kubernetes.io/instance: rabbitmq-operator
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: rabbitmq-operator
    app.kubernetes.io/instance: rabbitmq-operator
---
# Source: rabbitmq-operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-operator
  labels:
    app.kubernetes.io/name: rabbitmq-operator
    helm.sh/chart: rabbitmq-operator-0.1.0
    app.kubernetes.io/instance: rabbitmq-operator
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Tiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq-operator
      app.kubernetes.io/instance: rabbitmq-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq-operator
        app.kubernetes.io/instance: rabbitmq-operator
    spec:
      serviceAccountName: rabbitmq-operator
      securityContext:
        null
        
      containers:
        - name: rabbitmq-operator
          image: "rabbitmq-operator:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
